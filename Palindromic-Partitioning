class Solution{
public:
    int palindromicPartition(string str)
    {
        // code here
        int n=str.size();
        vector<vector<int>>check(n,vector<int>(n,0));
        for(int i=n-1;i>=0;i--){
            for(int j=0;j<n;j++){
                if(i>j) continue;
                if(i==j) check[i][j]=1;
                else{
                    if(j==i+1){
                        if(str[i]==str[j]) check[i][j]=1;
                        continue;
                    }
                    if(str[i]==str[j]) check[i][j]=check[i+1][j-1];
                }
            }
        }
        vector<int>dp(n,INT_MAX);
        dp[n-1]=0;
        for(int i=n-2;i>=0;i--){
            int a=1+dp[i+1];
        
        for(int j=i+1;j<n-1;j++){
            if(check[i][j])a=min(a,1+dp[j+1]);
        }
        if(check[i][n-1]) a=0;
        dp[i]=a;
        }
        return dp[0];
    }
};
